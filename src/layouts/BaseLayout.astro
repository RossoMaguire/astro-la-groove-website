---
import "../styles/tailwind.css"
import {OPEN_GRAPH, SITE} from "../config"

export interface Props {
  title?: string;
  description?: string;
}
let { title, description } = Astro.props
title = title ? `${title} | ${SITE.title}` : `${SITE.title}`
const canonicalURL = Astro.canonicalURL.toString()
const canonicalImageSrc = new URL(OPEN_GRAPH.image.src, Astro.site).toString()
const imageAlt = OPEN_GRAPH.image.alt
---

<html class="h-full scroll-smooth antialiased [font-feature-settings:'ss01']" lang="en">
  <head>
    <title>{ title }</title>
    <meta charset="UTF-8">
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <link rel="alternate" type="application/rss+xml" href="/blog/rss.xml" title="RSS" />
    <link rel="sitemap" href="/sitemap-index.xml">

    <link rel="stylesheet" href="/fonts/inter/inter.css" />
    <link rel="stylesheet" href="/fonts/lexend/lexend.css" />

    <link rel="canonical" href={canonicalURL} />

    <!-- OpenGraph -->
    <meta property="og:title" content={title ?? SITE.title} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={canonicalImageSrc} />
    <meta property="og:image:alt" content={imageAlt} />
    <meta property="og:site_name" content={SITE.title} />
    <meta property="og:locale" content={OPEN_GRAPH.locale} />
    <meta
      name="description"
      property="og:description"
      content={description ?? SITE.description}
    />

    <!-- Twitter tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta
      name="twitter:description"
      content={description ?? SITE.description}
    />
    <meta name="twitter:image" content={canonicalImageSrc} />
    <meta name="twitter:image:alt" content={imageAlt} />

    <slot name="head" />
  </head>

  <body class="h-full bg-white dark:bg-slate-900 transition-colors">
    <div id="swup" class="h-full swup-transition-fade">
      <slot />
    </div>
  </body>
</html>

<script>
  import Swup from 'swup'
  import SwupScriptsPlugin from '@swup/scripts-plugin'
  import SwupA11yPlugin from '@swup/a11y-plugin'
  import SwupPreloadPlugin from '@swup/preload-plugin'
  import SwupProgressPlugin from "@swup/progress-plugin"

  const swup = new Swup({
    animationSelector: '[class*="swup-transition-"]',
    plugins: [
      new SwupScriptsPlugin(),
      new SwupA11yPlugin(),
      new SwupPreloadPlugin(),
      new SwupProgressPlugin(),
    ],
  })

  document.addEventListener("swup:contentReplaced", () => {
    document.documentElement.classList.remove("scroll-smooth")
    window.scrollTo({
      top: 0,
      behavior: "auto",
    })
    document.documentElement.classList.add("scroll-smooth")
  })
</script>

<style is:global>
.swup-transition-fade {
  transition: 0.01s;
  opacity: 1;
}

html.is-animating .swup-transition-fade {
  opacity: 0.99;
}
</style>